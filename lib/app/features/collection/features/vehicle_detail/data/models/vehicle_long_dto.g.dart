// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'vehicle_long_dto.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

VehicleLongDto _$VehicleLongDtoFromJson(Map<String, dynamic> json) =>
    VehicleLongDto(
      id: json['id'] as int,
      vehicleBrandId: json['vehicleBrandId'] as int,
      vehicleBrandName: json['vehicleBrandName'] as String,
      vehicleModelId: json['vehicleModelId'] as int,
      vehicleModelName: json['vehicleModelName'] as String,
      vehicleColorId: json['vehicleColorId'] as int,
      vehicleColorName: json['vehicleColorName'] as String,
      vin: json['vin'] as String,
      mileage: json['mileage'] as int,
      type: json['type'] as int,
      isNew: json['isNew'] as bool,
      internalNumber: json['internalNumber'] as String,
      vehicleFuelTypeId: json['vehicleFuelTypeId'] as int?,
      vehicleFuelTypeName: json['vehicleFuelTypeName'] as String?,
      typeCertification: json['typeCertification'] as String?,
      notes: json['notes'] as String?,
      marketDate: json['marketDate'] == null
          ? null
          : DateTime.parse(json['marketDate'] as String),
      battery: json['battery'] as int?,
      sService: json['sService'] as bool?,
      mfk: json['mfk'] as bool?,
      mfk_Price: (json['mfk_Price'] as num?)?.toDouble(),
      breaksFront: json['breaksFront'] as bool?,
      breaksRear: json['breaksRear'] as bool?,
      engineOilLeak: json['engineOilLeak'] as bool?,
      transOilLeak: json['transOilLeak'] as bool?,
      controlLight: json['controlLight'] as bool?,
      transType: json['transType'] as String?,
      driveable: json['driveable'] as bool?,
      axelLoader1: json['axelLoader1'] as String?,
      axelLoader2: json['axelLoader2'] as String?,
      note: json['note'] as String?,
      serviceType: json['serviceType'] as int? ?? VehicleServiceType.unknown,
      serviceTypePrice: (json['serviceTypePrice'] as num?)?.toDouble(),
      priceBreaksFront: (json['priceBreaksFront'] as num?)?.toDouble(),
      priceBreaksRear: (json['priceBreaksRear'] as num?)?.toDouble(),
      priceTransOilLeak: (json['priceTransOilLeak'] as num?)?.toDouble(),
      priceControlLight: (json['priceControlLight'] as num?)?.toDouble(),
      priceEngineOilLeak: (json['priceEngineOilLeak'] as num?)?.toDouble(),
      interior: json['interior'] as String?,
      summerTireId: json['summerTireId'] as int?,
      winterTireId: json['winterTireId'] as int?,
      allSeasonId: json['allSeasonId'] as int?,
      tags: json['tags'] as String?,
      servicePrice: (json['servicePrice'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$VehicleLongDtoToJson(VehicleLongDto instance) =>
    <String, dynamic>{
      'id': instance.id,
      'vehicleBrandId': instance.vehicleBrandId,
      'vehicleBrandName': instance.vehicleBrandName,
      'vehicleModelId': instance.vehicleModelId,
      'vehicleModelName': instance.vehicleModelName,
      'vehicleColorId': instance.vehicleColorId,
      'vehicleColorName': instance.vehicleColorName,
      'vin': instance.vin,
      'mileage': instance.mileage,
      'type': instance.type,
      'isNew': instance.isNew,
      'vehicleFuelTypeId': instance.vehicleFuelTypeId,
      'vehicleFuelTypeName': instance.vehicleFuelTypeName,
      'typeCertification': instance.typeCertification,
      'notes': instance.notes,
      'internalNumber': instance.internalNumber,
      'marketDate': instance.marketDate?.toIso8601String(),
      'battery': instance.battery,
      'sService': instance.sService,
      'mfk': instance.mfk,
      'serviceType': instance.serviceType,
      'serviceTypePrice': instance.serviceTypePrice,
      'mfk_Price': instance.mfk_Price,
      'breaksFront': instance.breaksFront,
      'breaksRear': instance.breaksRear,
      'engineOilLeak': instance.engineOilLeak,
      'transOilLeak': instance.transOilLeak,
      'controlLight': instance.controlLight,
      'transType': instance.transType,
      'driveable': instance.driveable,
      'axelLoader1': instance.axelLoader1,
      'axelLoader2': instance.axelLoader2,
      'note': instance.note,
      'priceBreaksFront': instance.priceBreaksFront,
      'priceBreaksRear': instance.priceBreaksRear,
      'priceTransOilLeak': instance.priceTransOilLeak,
      'priceControlLight': instance.priceControlLight,
      'priceEngineOilLeak': instance.priceEngineOilLeak,
      'interior': instance.interior,
      'summerTireId': instance.summerTireId,
      'winterTireId': instance.winterTireId,
      'allSeasonId': instance.allSeasonId,
      'tags': instance.tags,
      'servicePrice': instance.servicePrice,
    };
